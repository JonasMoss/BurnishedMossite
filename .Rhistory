b = Inf)*
dexp(mean, theta0)
}
integrate(integrand, lower = 0, upper = Inf)$value
})
posteriorH0 = function(u) {
1/(1 + ugivenha(u)/dnorm(u_to_x(u)))
}
u = seq(0.0001, 1 - 0.0001, by = .0001)*alpha
plot(u/alpha, posteriorH0(u))
theta0 = 1
n = 100
alpha = .05
u_to_x = function(u, n) -qnorm(u/2)/sqrt(n)
u_to_x = function(u, n) -qnorm(u)/sqrt(n)
ugivenha = Vectorize(function(u) {
integrand = function(mean) {
truncnorm::dtruncnorm(x = u_to_x(u, n = n),
mean = mean,
a = qnorm(alpha),
b = Inf)*
dexp(mean, theta0)
}
integrate(integrand, lower = 0, upper = Inf)$value
})
posteriorH0 = function(u) {
1/(1 + ugivenha(u)/dnorm(u_to_x(u, n)))
}
u = seq(0.0001, 1 - 0.0001, by = .0001)*alpha
plot(u/alpha, posteriorH0(u))
theta0 = 1
n = 1000
alpha = .05
u_to_x = function(u, n) -qnorm(u/2)/sqrt(n)
u_to_x = function(u, n) -qnorm(u)/sqrt(n)
ugivenha = Vectorize(function(u) {
integrand = function(mean)
dnorm(x = u_to_x(u, n = n),mean = mean, sd = 1)*dexp(mean, theta0)
integrate(integrand, lower = 0, upper = Inf)$value
})
posteriorH0 = function(u) {
1/(1 + ugivenha(u)/dnorm(u_to_x(u, n)))
}
posteriorHA(0.05)
u = seq(0.0001, 1 - 0.0001, by = .0001)
plot(u, posteriorHA(u))
posteriorHA(0.05)
u = seq(0.0001, 1 - 0.0001, by = .0001)
plot(u, posteriorH0(u))
theta0 = 1
n = 10
alpha = .05
u_to_x = function(u, n) -qnorm(u/2)/sqrt(n)
u_to_x = function(u, n) -qnorm(u)/sqrt(n)
ugivenha = Vectorize(function(u) {
integrand = function(mean) {
truncnorm::dtruncnorm(x = u_to_x(u, n = n),
mean = mean,
a = qnorm(alpha),
b = Inf)*
dexp(mean, theta0)
}
integrate(integrand, lower = 0, upper = Inf)$value
})
posteriorH0 = function(u) {
1/(1 + ugivenha(u)/dnorm(u_to_x(u, n)))
}
u = seq(0.0001, 1 - 0.0001, by = .0001)*alpha
plot(u/alpha, posteriorH0(u))
theta0 = 1
n = 10
alpha = .05
u_to_x = function(u, n) -qnorm(u/2)/sqrt(n)
u_to_x = function(u, n) -qnorm(u)/sqrt(n)
ugivenha = Vectorize(function(u) {
integrand = function(mean)
dnorm(x = u_to_x(u, n = n),mean = mean, sd = 1)*dexp(mean, theta0)
integrate(integrand, lower = 0, upper = Inf)$value
})
posteriorH0 = function(u) {
1/(1 + ugivenha(u)/dnorm(u_to_x(u, n)))
}
posteriorHA(0.05)
u = seq(0.0001, 1 - 0.0001, by = .0001)
plot(u, posteriorH0(u))
posteriorH0(0.0001)
posteriorH0(0.00001)
posteriorH0(0.000001)
posteriorH0(0.0000001)
posteriorH0(0.00000001)
posteriorH0(0.000000001)
posteriorH0(0.0000000001)
u_to_x = function(u, n) -qnorm(u)/sqrt(n)
mu = 1
n = 100
pH0 = function(u) 1/(1 + R*exp(n*mu*(u_to_x(u, n) - 1/2*mu)))
plot(u, pH0(u))
u_to_x = function(u, n) -qnorm(u)/sqrt(n)
mu = 1
n = 100
R = 1/2
pH0 = function(u) 1/(1 + R*exp(n*mu*(u_to_x(u, n) - 1/2*mu)))
plot(u, pH0(u))
u_to_x = function(u, n) -qnorm(u)/sqrt(n)
mu = 1
n = 10
R = 1/2
pH0 = function(u) 1/(1 + R*exp(n*mu*(u_to_x(u, n) - 1/2*mu)))
plot(u, pH0(u))
u_to_x = function(u, n) -qnorm(u)/sqrt(n)
mu = 1
n = 1
R = 1/2
pH0 = function(u) 1/(1 + R*exp(n*mu*(u_to_x(u, n) - 1/2*mu)))
plot(u, pH0(u))
u_to_x = function(u, n) -qnorm(u)/sqrt(n)
mu = 4
n = 1
R = 1/2
pH0 = function(u) 1/(1 + R*exp(n*mu*(u_to_x(u, n) - 1/2*mu)))
plot(u, pH0(u))
u_to_x(u, n = 1)
pH0(0.001)
pH0(0.01)
pH0(0.05)
dnorm(u_to_x(u, n))/dnorm(u_to_x(u, n), mean = 1)
dnorm(u_to_x(0.05, n))/dnorm(u_to_x(0.05, n), mean = 1)
(1 - 0.8922308)/0.8922308
plot(u, dnorm(u_to_x(u, n))/dnorm(u_to_x(u, n), mean = 1))
u_to_x = function(u, n) -qnorm(u)/sqrt(n)
mu = 4
n = 1
R = 1/2
pH0 = function(u) 1/(1 + R*exp(n*mu*(u_to_x(u, n) - 1/2*mu)))
plot(u, pH0(u))
plot(u, dnorm(u_to_x(u, n))/dnorm(u_to_x(u, n), mean = 1))
u_to_x = function(u, n) -qnorm(u)/sqrt(n)
mu = 4
n = 1
R = 1/2
pH0 = function(u) 1/(1 + R*exp(n*mu*(u_to_x(u, n) - 1/2*mu)))
plot(u, pH0(u))
plot(u, log(dnorm(u_to_x(u, n))/dnorm(u_to_x(u, n), mean = 1)))
theta0 = 1
n = 10
alpha = .05
u_to_x = function(u, n) -qnorm(u/2)/sqrt(n)
u_to_x = function(u, n) -qnorm(u)/sqrt(n)
ugivenha = Vectorize(function(u) {
integrand = function(mean) {
truncnorm::dtruncnorm(x = u_to_x(u, n = n),
mean = mean,
a = qnorm(alpha),
b = Inf)*
dexp(mean, theta0)
}
integrate(integrand, lower = qnorm(alpha), upper = Inf)$value
})
posteriorH0 = function(u) {
1/(1 + ugivenha(u)/dnorm(u_to_x(u, n)))
}
u = seq(0.0001, 1 - 0.0001, by = .0001)*alpha
plot(u/alpha, posteriorH0(u))
posteriorH0(0.00001)
posteriorH0(0.000001)
posteriorH0(0.0000001)
posteriorH0(0.00000001)
posteriorH0(0.000000001)
posteriorH0(0.0000000001)
u_to_x = function(u, n) -qnorm(u)/sqrt(n)
mu = 4
n = 1
R = 1/2
factor = Vectorize(function(u) {
integrand = function(mean) {
truncnorm::dtruncnorm(x = u_to_x(u, n = n),
mean = mean,
a = qnorm(alpha),
b = Inf)*
dexp(mean, theta0)
}
upper = dnorm(u_to_x(u, n))
lower = integrate(integrand, lower = 0, upper = Inf)
})
plot(u, factor(u))
u_to_x = function(u, n) -qnorm(u)/sqrt(n)
mu = 4
n = 1
R = 1/2
factor = Vectorize(function(u) {
integrand = function(mean) {
truncnorm::dtruncnorm(x = u_to_x(u, n = n),
mean = mean,
a = qnorm(alpha),
b = Inf)*
dexp(mean, theta0)
}
upper = dnorm(u_to_x(u, n))
lower = integrate(integrand, lower = 0, upper = Inf)$value
})
plot(u, factor(u))
u_to_x = function(u, n) -qnorm(u)/sqrt(n)
mu = 4
n = 1
R = 1/2
factor = Vectorize(function(u) {
integrand = function(mean) {
truncnorm::dtruncnorm(x = u_to_x(u, n = n),
mean = mean,
a = qnorm(alpha),
b = Inf)*
dexp(mean, theta0)
}
upper = dnorm(u_to_x(u, n))
lower = integrate(integrand, lower = 0, upper = Inf)$value
})
factor2 = Vectorize(function(u) {
integrand = function(mean) {
dnorm(x = u_to_x(u, n = n),
mean = mean)
dexp(mean, theta0)
}
upper = dnorm(u_to_x(u, n))
lower = integrate(integrand, lower = 0, upper = Inf)$value
})
plot(u, factor(u), lty = 2)
lines(u, factor2(u), col = "red")
plot(u, factor2(u), col = "red")
factor = Vectorize(function(u) {
integrand = function(mean) {
truncnorm::dtruncnorm(x = u_to_x(u, n = n),
mean = mean,
a = qnorm(alpha),
b = Inf)*
dexp(mean, theta0)
}
upper = dnorm(u_to_x(u, n))
lower = integrate(integrand, lower = 0, upper = Inf)$value
upper/lower
})
factor2 = Vectorize(function(u) {
integrand = function(mean) {
dnorm(x = u_to_x(u, n = n),
mean = mean)*
dexp(mean, theta0)
}
upper = dnorm(u_to_x(u, n))
lower = integrate(integrand, lower = 0, upper = Inf)$value
upper/lower
})
plot(u, factor(u), lty = 2)
plot(u, factor2(u), col = "red")
plot(u, factor(u), lty = 2)
lines(u, factor2(u), col = "red")
factor2 = Vectorize(function(u) {
integrand = function(mean)
dnorm(x = u_to_x(u, n = n),mean = mean)*dexp(mean, theta0)
upper = dnorm(u_to_x(u, n))
lower = integrate(integrand, lower = 0, upper = Inf)$value
upper/lower
})
plot(u, factor(u), lty = 2)
lines(u, factor2(u), col = "red")
plot(u, factor(u), lty = 2, type = "l")
lines(u, factor2(u), col = "red")
u_to_x = function(u, n) -qnorm(u)/sqrt(n)
mu = 4
n = 1
R = 1/2
factor = Vectorize(function(u) {
integrand = function(mean) {
truncnorm::dtruncnorm(x = u_to_x(u, n = n),
mean = mean,
a = qnorm(alpha),
b = Inf)*
dexp(mean, theta0)
}
upper = dnorm(u_to_x(u, n))
lower = integrate(integrand, lower = 0, upper = Inf)$value
upper/lower
})
factor2 = Vectorize(function(u) {
integrand = function(mean)
dnorm(x = u_to_x(u, n = n),mean = mean)*dexp(mean, theta0)
upper = dnorm(u_to_x(u, n))
lower = integrate(integrand, lower = 0, upper = Inf)$value
upper/lower
})
plot(u, factor(u), lty = 2, type = "l", lwd = 2)
lines(u, factor2(u), col = "red", lwd = 2)
mu = 4
n = 100
R = 1/2
factor = Vectorize(function(u) {
integrand = function(mean) {
truncnorm::dtruncnorm(x = u_to_x(u, n = n),
mean = mean,
a = qnorm(alpha),
b = Inf)*
dexp(mean, theta0)
}
upper = dnorm(u_to_x(u, n))
lower = integrate(integrand, lower = 0, upper = Inf)$value
upper/lower
})
factor2 = Vectorize(function(u) {
integrand = function(mean)
dnorm(x = u_to_x(u, n = n),mean = mean)*dexp(mean, theta0)
upper = dnorm(u_to_x(u, n))
lower = integrate(integrand, lower = 0, upper = Inf)$value
upper/lower
})
plot(u, factor(u), lty = 2, type = "l", lwd = 2)
lines(u, factor2(u), col = "red", lwd = 2)
u = seq(0, 1, by = 0.001)
plot(u/20, factor(u/20), lty = 2, type = "l", lwd = 2)
lines(u, factor2(u), col = "red", lwd = 2)
u = seq(0, 1, by = 0.001)
plot(u, factor(u/20), lty = 2, type = "l", lwd = 2)
lines(u, factor2(u), col = "red", lwd = 2)
plot(u, factor(u/20)/factor2(u))
factor(0.000001/20)/factor2(0.000001)
factor(0.999999/20)/factor2(0.999999)
factor(0.999999999/20)/factor2(0.999999999)
factor(0.999999999999/20)/factor2(0.999999999999)
factor(0.999999999999999/20)/factor2(0.999999999999999)
factor(0.999999999999999/20)
factor2(0.999999999999999)
plot(u, factor2(u), col = "red", lwd = 2, type = "l")
u_to_x = function(u, n) -qnorm(u)/sqrt(n)
mu = 4
n = 1
R = 1/2
factor = Vectorize(function(u) {
integrand = function(mean) {
truncnorm::dtruncnorm(x = u_to_x(u, n = n),
mean = mean,
a = qnorm(alpha),
b = Inf)*
dexp(mean, theta0)
}
upper = dnorm(u_to_x(u, n))
lower = integrate(integrand, lower = 0, upper = Inf)$value
upper/lower
})
factor2 = Vectorize(function(u) {
integrand = function(mean)
dnorm(x = u_to_x(u, n = n), mean = mean)*dexp(mean, theta0)
upper = dnorm(u_to_x(u, n))
lower = integrate(integrand, lower = 0, upper = Inf)$value
upper/lower
})
u = seq(0, 1, by = 0.001)
plot(u, factor(u/20), lty = 2, type = "l", lwd = 2)
lines(u, factor2(u), col = "red", lwd = 2)
plot(u, factor(u/20)/factor2(u))
plot(u, factor2(u), col = "red", lwd = 2, type = "l")
plot(u_to_x(u, n), factor(u/20), lty = 2, type = "l", lwd = 2)
lines(u_to_x(u, n), factor2(u), col = "red", lwd = 2)
plot(u_to_x(u/20, n), factor(u/20), lty = 2, type = "l", lwd = 2)
lines(u_to_x(u, n), factor2(u), col = "red", lwd = 2)
plot(u_to_x(u, n), factor2(u), col = "red", lwd = 2)
lines(u_to_x(u/20, n), factor(u/20), lty = 2, type = "l", lwd = 2)
plot(u_to_x(u, n), factor2(u), col = "red", lwd = 2, type = "l")
lines(u_to_x(u/20, n), factor(u/20), lty = 2, type = "l", lwd = 2)
plot(u_to_x(u/20, n), factor(u/20), lty = 2, type = "l", lwd = 2)
lines(u_to_x(u, n), factor2(u), col = "red", lwd = 2, type = "l")
plot(u_to_x(u/20, n), factor(u/20), lty = 2, type = "l", lwd = 2)
lines(u_to_x(u/20, n), factor2(u/20), col = "red", lwd = 2, type = "l")
plot(u/20, factor(u/20), lty = 2, type = "l", lwd = 2)
lines(u, factor2(u), col = "red", lwd = 2, type = "l")
plot(u/20, factor(u/20), lty = 2, type = "l", lwd = 2)
lines(u/20, factor2(u/20), col = "red", lwd = 2, type = "l")
plot(u, factor(u/20), lty = 2, type = "l", lwd = 2)
lines(u, factor2(u), col = "red", lwd = 2, type = "l")
plot(u, factor(u/20), lty = 2, type = "l", lwd = 2)
lines(u, factor2(u), col = "red", lwd = 2, type = "l")
plot(u/20, factor(u/20), lty = 2, type = "l", lwd = 2)
lines(u/20, factor2(u/20), col = "red", lwd = 2, type = "l")
plot(u/20, factor(u/20)/factor2(u/20), col = "red", lwd = 2, type = "l")
u_to_x = function(u, n) -qnorm(u)/sqrt(n)
mu = 4
n = 1000
R = 1/2
factor = Vectorize(function(u) {
integrand = function(mean) {
truncnorm::dtruncnorm(x = u_to_x(u, n = n),
mean = mean,
a = qnorm(alpha),
b = Inf)*
dexp(mean, theta0)
}
upper = dnorm(u_to_x(u, n))
lower = integrate(integrand, lower = 0, upper = Inf)$value
upper/lower
})
factor2 = Vectorize(function(u) {
integrand = function(mean)
dnorm(x = u_to_x(u, n = n), mean = mean)*dexp(mean, theta0)
upper = dnorm(u_to_x(u, n))
lower = integrate(integrand, lower = 0, upper = Inf)$value
upper/lower
})
u = seq(0, 1, by = 0.001)
plot(u, factor(u/20), lty = 2, type = "l", lwd = 2)
lines(u, factor2(u), col = "red", lwd = 2)
plot(u, factor(u/20)/factor2(u))
plot(u, factor2(u), col = "red", lwd = 2, type = "l")
plot(u/20, factor(u/20), lty = 2, type = "l", lwd = 2)
lines(u/20, factor2(u/20), col = "red", lwd = 2, type = "l")
#lines(u_to_x(u/20, n), factor(u/20), lty = 2, type = "l", lwd = 2)
plot(u/20, factor(u/20)/factor2(u/20), col = "red", lwd = 2, type = "l")
plot(u/20, factor(u/20)/factor2(u/20), col = "red", lwd = 2, type = "l")
u_to_x = function(u, n) -qnorm(u)/sqrt(n)
mu = 4
n = 1000
R = 1/2
factor = Vectorize(function(u) {
integrand = function(mean) {
truncnorm::dtruncnorm(x = u_to_x(u, n = n),
mean = mean,
a = qnorm(alpha),
b = Inf)*
dexp(mean, theta0)
}
upper = dnorm(u_to_x(u, n))
lower = integrate(integrand, lower = 0, upper = Inf)$value
upper/lower
})
factor2 = Vectorize(function(u) {
integrand = function(mean)
dnorm(x = u_to_x(u, n = n), mean = mean)*dexp(mean, theta0)
upper = dnorm(u_to_x(u, n))
lower = integrate(integrand, lower = 0, upper = Inf)$value
upper/lower
})
u = seq(0, 1, by = 0.001)
plot(u, factor(u/20), lty = 2, type = "l", lwd = 2)
lines(u, factor2(u), col = "red", lwd = 2)
plot(u, factor(u/20)/factor2(u))
plot(u, factor2(u), col = "red", lwd = 2, type = "l")
plot(u/20, factor(u/20), lty = 2, type = "l", lwd = 2)
lines(u/20, factor2(u/20), col = "red", lwd = 2, type = "l")
#lines(u_to_x(u/20, n), factor(u/20), lty = 2, type = "l", lwd = 2)
plot(u/20, factor(u/20)/factor2(u/20), col = "red", lwd = 2, type = "l")
pH0 = function(u) 1/(1 + R*exp(n*mu*(u_to_x(u, n) - 1/2*mu)))
plot(u, pH0(u))
plot(u, log(dnorm(u_to_x(u, n))/dnorm(u_to_x(u, n), mean = 1)))
plot(u, u)
lines(u, u/(20 - 19*u))
fun = function(u, pi = 0.5, alpha = 0.05) {
u*((1 - pi) + pi/alpha)(u <= alpha)
pi + (1 - pi)*u*(u > alpha)
}
fun = function(u, pi = 0.5, alpha = 0.05) {
u*((1 - pi) + pi/alpha)(u <= alpha)
pi + (1 - pi)*u*(u > alpha)
}
plot(u, fun(u))
fun = function(u, pi = 0.5, alpha = 0.05) {
u*((1 - pi) + pi/alpha)(u <= alpha)
pi + (1 - pi)*u*(u > alpha)
}
plot(u, fun(u))
fun = function(u, pi = 0.5, alpha = 0.05) {
u*((1 - pi) + pi/alpha)(u <= alpha)
pi + (1 - pi)*u*(u > alpha)
}
fun = function(u, pi = 0.5, alpha = 0.05) {
u*((1 - pi) + pi/alpha)*(u <= alpha)*pi + (1 - pi)*u*(u > alpha)
}
fun = function(u, pi = 0.5, alpha = 0.05)
u*((1 - pi) + pi/alpha)*(u <= alpha)*pi + (1 - pi)*u*(u > alpha)
fun = function(u, pi = 0.5, alpha = 0.05) {
u*((1 - pi) + pi/alpha)(u <= alpha)
pi + (1 - pi)*u*(u > alpha)
}
fun = function(u, pi = 0.5, alpha = 0.05) {
u*((1 - pi) + pi/alpha)(u <= alpha)
pi + (1 - pi)*u*(u > alpha)
}
plot(u, fun(u))
fun = function(u, pi = 0.5, alpha = 0.05)
u*((1 - pi) + pi/alpha)*(u <= alpha)*pi + (1 - pi)*u*(u > alpha)
plot(u, fun(u))
plot(u, fun(u))
fun = function(u, pi = 0.5, alpha = 0.05)
u*((1 - pi) + pi/alpha)*(u <= alpha)*(pi + (1 - pi)*u)*(u > alpha)
plot(u, fun(u))
fun = function(u, pi = 0.5, alpha = 0.05)
u*((1 - pi) + pi/alpha)*(u <= alpha) + (pi + (1 - pi)*u)*(u > alpha)
plot(u, fun(u))
plot(u, fun(u, pi = 0.1, alpha = .0027), type = "l")
lines(u, fun(u, pi = 0.4, alpha = .0027), type = "l", col = "blue")
lines(u, fun(u, pi = 0.9, alpha = .0027), type = "l", col = "red")
plot(u, fun(u, pi = 0.2, alpha = .0027), type = "l")
lines(u, fun(u, pi = 0.4, alpha = .0027), type = "l", col = "blue")
lines(u, fun(u, pi = 0.7, alpha = .0027), type = "l", col = "red")
plot(u, fun(u, pi = 0.2, alpha = .0027), type = "l", log = "x")
lines(u, fun(u, pi = 0.4, alpha = .0027), type = "l", col = "blue")
lines(u, fun(u, pi = 0.7, alpha = .0027), type = "l", col = "red")
lines(u, fun(u, pi = 0.7, alpha = .0027), type = "l", col = "red")
plot(u, fun(u, pi = 0.2, alpha = .0027), type = "l", log = "x")
lines(u, fun(u, pi = 0.4, alpha = .0027), type = "l", col = "blue")
lines(u, fun(u, pi = 0.7, alpha = .0027), type = "l", col = "red")
lines(u, fun(u, pi = 0.9, alpha = .05), type = "l", col = "purple", lwd = 2)
plot(u, fun(u, pi = 0.2, alpha = .005), type = "l", log = "x")
lines(u, fun(u, pi = 0.4, alpha = .005), type = "l", col = "blue")
lines(u, fun(u, pi = 0.7, alpha = .005), type = "l", col = "red")
lines(u, fun(u, pi = 0.9, alpha = .05), type = "l", col = "purple", lwd = 2)
plot(u, fun(0.05, pi = 0.2, alpha = .005), type = "l", log = "x")
plot(u, fun(0.05, pi = 0.2, alpha = u), type = "l", log = "x")
